// <auto-generated />
using System;
using Infrastructure.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(TodoItemDbContext))]
    [Migration("20250425120014_FixPendingChanges")]
    partial class FixPendingChanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<DateTime>("ExpiryDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expiry_date_time");

                    b.Property<bool>("IsCompleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_completed");

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated_at");

                    b.Property<int>("PercentComplete")
                        .HasColumnType("integer")
                        .HasColumnName("percent_complete");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("todo_items", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "This is a sample todo item.",
                            ExpiryDateTime = new DateTime(2023, 1, 8, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsCompleted = false,
                            PercentComplete = 0,
                            Title = "Sample Todo Item"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "This is another todo item.",
                            ExpiryDateTime = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsCompleted = false,
                            PercentComplete = 50,
                            Title = "Another Todo Item"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "This todo item is completed.",
                            ExpiryDateTime = new DateTime(2022, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsCompleted = true,
                            PercentComplete = 100,
                            Title = "Completed Todo Item"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
